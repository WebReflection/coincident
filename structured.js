const e="object"==typeof self?self:globalThis,t=t=>((t,s)=>{const r=(e,s)=>(t.set(s,e),e),n=a=>{if(t.has(a))return t.get(a);const[o,c]=s[a];switch(o){case 0:case-1:return r(c,a);case 1:{const e=r([],a);for(const t of c)e.push(n(t));return e}case 2:{const e=r({},a);for(const[t,s]of c)e[n(t)]=n(s);return e}case 3:return r(new Date(c),a);case 4:{const{source:e,flags:t}=c;return r(new RegExp(e,t),a)}case 5:{const e=r(new Map,a);for(const[t,s]of c)e.set(n(t),n(s));return e}case 6:{const e=r(new Set,a);for(const t of c)e.add(n(t));return e}case 7:{const{name:t,message:s}=c;return r(new e[t](s),a)}case 8:return r(BigInt(c),a);case"BigInt":return r(Object(BigInt(c)),a)}return r(new e[o](c),a)};return n})(new Map,t)(0),s="",{toString:r}={},{keys:n}=Object,a=e=>{const t=typeof e;if("object"!==t||!e)return[0,t];const n=r.call(e).slice(8,-1);switch(n){case"Array":return[1,s];case"Object":return[2,s];case"Date":return[3,s];case"RegExp":return[4,s];case"Map":return[5,s];case"Set":return[6,s]}return n.includes("Array")?[1,n]:n.includes("Error")?[7,n]:[2,n]},o=([e,t])=>0===e&&("function"===t||"symbol"===t),c=(e,{json:t,lossy:s}={})=>{const r=[];return((e,t,s,r)=>{const c=(e,t)=>{const n=r.push(e)-1;return s.set(t,n),n},i=r=>{if(s.has(r))return s.get(r);let[u,f]=a(r);switch(u){case 0:{let t=r;switch(f){case"bigint":u=8,t=r.toString();break;case"function":case"symbol":if(e)throw new TypeError("unable to serialize "+f);t=null;break;case"undefined":return c([-1],r)}return c([u,t],r)}case 1:{if(f)return c([f,[...r]],r);const e=[],t=c([u,e],r);for(const t of r)e.push(i(t));return t}case 2:{if(f)switch(f){case"BigInt":return c([f,r.toString()],r);case"Boolean":case"Number":case"String":return c([f,r.valueOf()],r)}if(t&&"toJSON"in r)return i(r.toJSON());const s=[],l=c([u,s],r);for(const t of n(r))!e&&o(a(r[t]))||s.push([i(t),i(r[t])]);return l}case 3:return c([u,r.toISOString()],r);case 4:{const{source:e,flags:t}=r;return c([u,{source:e,flags:t}],r)}case 5:{const t=[],s=c([u,t],r);for(const[s,n]of r)(e||!o(a(s))&&!o(a(n)))&&t.push([i(s),i(n)]);return s}case 6:{const t=[],s=c([u,t],r);for(const s of r)!e&&o(a(s))||t.push(i(s));return s}}const{message:l}=r;return c([u,{name:f,message:l}],r)};return i})(!(t||s),!!t,new Map,r)(e),r},{parse:i,stringify:u}=JSON,f={json:!0,lossy:!0};var l=Object.freeze({__proto__:null,parse:e=>t(i(e)),stringify:e=>u(c(e,f))});const g="891249cd-eb53-4bc8-ae48-b0a5a277d24a";var p=e=>({value:new Promise((t=>{let s=new Worker("data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))");s.onmessage=t,s.postMessage(e)}))})
/*! (c) Andrea Giammarchi - ISC */;const{Int32Array:w,Map:h,SharedArrayBuffer:d,Uint16Array:y}=globalThis,{BYTES_PER_ELEMENT:b}=w,{BYTES_PER_ELEMENT:m}=y,{isArray:E}=Array,{notify:S,wait:A,waitAsync:M}=Atomics,{fromCharCode:v}=String,O=(e,t)=>e?(M||p)(t,0):(A(t,0),{value:{then:e=>e()}}),T=new WeakSet,j=new WeakMap;let B=0;const _=(e,{parse:t,stringify:s,transform:r}=JSON)=>{if(!j.has(e)){const n=(t,...s)=>e.postMessage({[g]:s},{transfer:t});let a=!1;j.set(e,new Proxy(new h,{has:(e,t)=>"string"==typeof t&&!t.startsWith("_"),get:(s,o)=>"then"===o?null:(...s)=>{const c=B++;let i=new w(new d(b)),u=[];T.has(s.at(-1)||u)&&T.delete(u=s.pop()),n(u,c,i,o,r?s.map(r):s);const f=e!==globalThis;let l=0;return a&&f&&(l=setTimeout(console.warn,1e3,`ðŸ’€ðŸ”’ - Possible deadlock if proxy.${o}(...args) is awaited`)),O(f,i).value.then((()=>{clearTimeout(l);const e=i[0];if(!e)return;const s=m*e;return i=new w(new d(s+s%b)),n([],c,i),O(f,i).value.then((()=>t(v(...new y(i.buffer).slice(0,e)))))}))},set(t,r,n){if(!t.size){const r=new h;e.addEventListener("message",(async e=>{const n=e.data?.[g];if(E(n)){e.stopImmediatePropagation();const[o,c,...i]=n;if(i.length){const[e,n]=i;if(!t.has(e))throw new Error(`Unsupported action: ${e}`);a=!0;try{const a=await t.get(e)(...n);if(void 0!==a){const e=s(a);r.set(o,e),c[0]=e.length}}finally{a=!1}}else{const e=r.get(o);r.delete(o);for(let t=new y(c.buffer),s=0;s<e.length;s++)t[s]=e.charCodeAt(s)}S(c,0)}}))}return!!t.set(r,n)}}))}return j.get(e)},k=(e,t)=>_(e,{...l,...t});k.transfer=_.transfer=(...e)=>(T.add(e),e);export{k as default};
