const e="object"==typeof self?self:globalThis,t=t=>((t,n)=>{const r=(e,n)=>(t.set(n,e),e),s=o=>{if(t.has(o))return t.get(o);const[a,c]=n[o];switch(a){case 0:case-1:return r(c,o);case 1:{const e=r([],o);for(const t of c)e.push(s(t));return e}case 2:{const e=r({},o);for(const[t,n]of c)e[s(t)]=s(n);return e}case 3:return r(new Date(c),o);case 4:{const{source:e,flags:t}=c;return r(new RegExp(e,t),o)}case 5:{const e=r(new Map,o);for(const[t,n]of c)e.set(s(t),s(n));return e}case 6:{const e=r(new Set,o);for(const t of c)e.add(s(t));return e}case 7:{const{name:t,message:n}=c;return r(new e[t](n),o)}case 8:return r(BigInt(c),o);case"BigInt":return r(Object(BigInt(c)),o)}return r(new e[a](c),o)};return s})(new Map,t)(0),n="",{toString:r}={},{keys:s}=Object,o=e=>{const t=typeof e;if("object"!==t||!e)return[0,t];const s=r.call(e).slice(8,-1);switch(s){case"Array":return[1,n];case"Object":return[2,n];case"Date":return[3,n];case"RegExp":return[4,n];case"Map":return[5,n];case"Set":return[6,n]}return s.includes("Array")?[1,s]:s.includes("Error")?[7,s]:[2,s]},a=([e,t])=>0===e&&("function"===t||"symbol"===t),c=(e,{json:t,lossy:n}={})=>{const r=[];return((e,t,n,r)=>{const c=(e,t)=>{const s=r.push(e)-1;return n.set(t,s),s},u=r=>{if(n.has(r))return n.get(r);let[i,f]=o(r);switch(i){case 0:{let t=r;switch(f){case"bigint":i=8,t=r.toString();break;case"function":case"symbol":if(e)throw new TypeError("unable to serialize "+f);t=null;break;case"undefined":return c([-1],r)}return c([i,t],r)}case 1:{if(f)return c([f,[...r]],r);const e=[],t=c([i,e],r);for(const t of r)e.push(u(t));return t}case 2:{if(f)switch(f){case"BigInt":return c([f,r.toString()],r);case"Boolean":case"Number":case"String":return c([f,r.valueOf()],r)}if(t&&"toJSON"in r)return u(r.toJSON());const n=[],l=c([i,n],r);for(const t of s(r))!e&&a(o(r[t]))||n.push([u(t),u(r[t])]);return l}case 3:return c([i,r.toISOString()],r);case 4:{const{source:e,flags:t}=r;return c([i,{source:e,flags:t}],r)}case 5:{const t=[],n=c([i,t],r);for(const[n,s]of r)(e||!a(o(n))&&!a(o(s)))&&t.push([u(n),u(s)]);return n}case 6:{const t=[],n=c([i,t],r);for(const n of r)!e&&a(o(n))||t.push(u(n));return n}}const{message:l}=r;return c([i,{name:f,message:l}],r)};return u})(!(t||n),!!t,new Map,r)(e),r},{parse:u,stringify:i}=JSON,f={json:!0,lossy:!0};var l=Object.freeze({__proto__:null,parse:e=>t(u(e)),stringify:e=>i(c(e,f))});
/*! (c) Andrea Giammarchi - ISC */const g="40e10a29-4d31-4dc2-940e-f87c0a72fd7e",{Int32Array:w,Map:h,SharedArrayBuffer:p,Uint16Array:y}=globalThis,{BYTES_PER_ELEMENT:d}=w,{BYTES_PER_ELEMENT:S}=y,{isArray:E}=Array,{notify:b,wait:m,waitAsync:A}=Atomics,{fromCharCode:O}=String,M=(e,t)=>e?A(t,0):(m(t,0),{value:{then:e=>e()}}),j=new WeakSet,B=new WeakMap;let _=0;const N=(e,{parse:t,stringify:n}=JSON)=>{if(!B.has(e)){const r=(t,...n)=>e.postMessage({[g]:n},{transfer:t});B.set(e,new Proxy(new h,{get:(n,s)=>"then"===s?null:(...n)=>{const o=_++;let a=new p(d);const c=new w(a);let u=[];j.has(n.at(-1)||u)&&j.delete(u=n.pop()),r(u,o,a,s,n);const i=e instanceof Worker;return M(i,c).value.then((()=>{const e=c[0],n=S*e;return a=new p(n+n%d),r([],o,a),M(i,new w(a)).value.then((()=>t(O(...new y(a).slice(0,e)))))}))},set(t,r,s){if(!t.size){const r=new h;e.addEventListener("message",(async({data:e})=>{const s=e?.[g];if(E(s)){const[e,o,...a]=s,c=new w(o);if(a.length){const[s,o]=a;if(!t.has(s))throw new Error(`Unsupported action: ${s}`);{const a=n(await t.get(s)(...o));r.set(e,a),c[0]=a.length}}else{const t=r.get(e);r.delete(e);for(let e=new y(o),n=0;n<t.length;n++)e[n]=t.charCodeAt(n)}b(c,0)}}))}return!!t.set(r,s)}}))}return B.get(e)},T=e=>N(e,l);T.transfer=N.transfer=(...e)=>(j.add(e),e);export{T as default};
