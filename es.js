var e="593db133-8af2-4d80-bf11-2b4f54fdc4ee",t=e=>({value:new Promise((t=>{let n=new Worker("data:application/javascript,"+encodeURIComponent("onmessage=({data:b})=>(Atomics.wait(b,0),postMessage(0))"));n.onmessage=t,n.postMessage(e)}))})
/*! (c) Andrea Giammarchi - ISC */;const{Int32Array:n,Map:a,SharedArrayBuffer:r,Uint16Array:s}=globalThis,{BYTES_PER_ELEMENT:o}=n,{BYTES_PER_ELEMENT:i}=s,{isArray:c}=Array,{notify:f,wait:l,waitAsync:d}=Atomics,{fromCharCode:w}=String,{create:p}=Object,g=(e,n)=>e?(d||t)(n,0):(l(n,0),{value:{then:e=>e()}}),u=new WeakSet,h=new WeakMap;let E=0,m=!1;const y=(t,{parse:l,stringify:d}=JSON)=>{if(!h.has(t)){const y=(n,...a)=>t.postMessage({[e]:a},{transfer:n});h.set(t,new Proxy(p(null),{get:(e,a)=>"then"===a?null:(...e)=>{const c=E++;let f=new n(new r(o)),d=[];u.has(e.at(-1)||d)&&u.delete(d=e.pop()),y(d,c,f,a,e);const p=t instanceof Worker;return g(p,f).value.then((()=>{const e=f[0];if(!e)return;const t=i*e;return f=new n(new r(t+t%o)),y([],c,f),g(p,f).value.then((()=>l(w(...new s(f.buffer).slice(0,e)))))}))},set(n,r,o){if(!m){m=!0;const r=new a;t.addEventListener("message",(async t=>{const a=t.data?.[e];if(c(a)){t.stopImmediatePropagation();const[e,o,...i]=a;if(i.length){const[t,a]=i;if(!(t in n))throw new Error(`Unsupported action: ${t}`);{const s=n[t],i=d(await s(...a));i&&(r.set(e,i),o[0]=i.length)}}else{const t=r.get(e);r.delete(e);for(let e=new s(o.buffer),n=0;n<t.length;n++)e[n]=t.charCodeAt(n)}f(o,0)}}))}return n[r]=o,m}}))}return h.get(t)};y.transfer=(...e)=>(u.add(e),e);export{y as default};
