/*! (c) Andrea Giammarchi - ISC */
const e="40e10a29-4d31-4dc2-940e-f87c0a72fd7e",{Int32Array:t,Map:n,SharedArrayBuffer:r,Uint16Array:s}=globalThis,{BYTES_PER_ELEMENT:a}=t,{BYTES_PER_ELEMENT:o}=s,{isArray:c}=Array,{notify:i,wait:l,waitAsync:f}=Atomics,{fromCharCode:w}=String,d=(e,t)=>e?f(t,0):(l(t,0),{value:{then:e=>e()}}),h=new WeakSet,g=new WeakMap;let E=0;const u=(l,{parse:f,stringify:u}=JSON)=>{if(!g.has(l)){const y=(t,...n)=>l.postMessage({[e]:n},{transfer:t});g.set(l,new Proxy(new n,{get:(e,n)=>"then"===n?null:(...e)=>{const c=E++;let i=new r(a);const g=new t(i);let u=[];h.has(e.at(-1)||u)&&h.delete(u=e.pop()),y(u,c,i,n,e);const p=l instanceof Worker;return d(p,g).value.then((()=>{const e=g[0],n=o*e;return i=new r(n+n%a),y([],c,i),d(p,new t(i)).value.then((()=>f(w(...new s(i).slice(0,e)))))}))},set(r,a,o){if(!r.size){const a=new n;l.addEventListener("message",(async({data:n})=>{const o=n?.[e];if(c(o)){const[e,n,...c]=o,l=new t(n);if(c.length){const[t,n]=c;if(!r.has(t))throw new Error(`Unsupported action: ${t}`);{const s=u(await r.get(t)(...n));a.set(e,s),l[0]=s.length}}else{const t=a.get(e);a.delete(e);for(let e=new s(n),r=0;r<t.length;r++)e[r]=t.charCodeAt(r)}i(l,0)}}))}return!!r.set(a,o)}}))}return g.get(l)};u.transfer=(...e)=>(h.add(e),e);export{u as default};
