/*! (c) Andrea Giammarchi - ISC */
const t="854ac5c3-44f1-4b2e-8d34-902cf30ef895",{BYTES_PER_ELEMENT:e}=Int32Array,{ceil:s}=Math,{fromCharCode:r}=String,a=new WeakMap;let o=0;var n=(n,{parse:i,stringify:c}=JSON)=>(a.has(n)||a.set(n,new Proxy(new Map,{get:(a,c)=>(...a)=>{const f=o++;let d=new SharedArrayBuffer(e),A=new Int32Array(d);n.postMessage({[t]:{action:c,args:a,id:f,sb:d}}),Atomics.wait(A,0);const g=Atomics.load(A,0),w=s(g/2);d=new SharedArrayBuffer(w*e),A=new Int32Array(d),n.postMessage({[t]:{args:[w],id:f,sb:d}}),Atomics.wait(A,0);let l="";for(let t=0;t<w;){const e=Atomics.load(A,t++),s=e>>16,a=65535&e;l+=2*t>g?r(s):r(s,a)}return i(l)},set(e,s,r){if(!e.size){const s=new Map;n.addEventListener("message",(async({data:r})=>{if(r[t]){const{action:a,args:o,id:n,sb:i}=r[t],f=new Int32Array(i);if(a){if(!e.has(a))throw new Error(`Unsupported action: ${a}`);{const t=c(await e.get(a)(...o));s.set(n,t),Atomics.store(f,0,t.length),Atomics.notify(f,0)}}else{const t=s.get(n),{length:e}=t;s.delete(n);for(let s=0,r=0;s<o[0];s++){const a=t.charCodeAt(r++)<<16,o=r===e?0:t.charCodeAt(r++);Atomics.store(f,s,a+o)}Atomics.notify(f,0)}}}))}return e.set(s,r),!0}})),a.get(n));export{n as default};
